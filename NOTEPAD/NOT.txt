JWT:-(JSON WEB TOKEN)
---
RouterGuards:-How To restrict access to the given part of the applications, Only Authorized users will be abe to access them.
HttpInterceptor:-How to intercept Http Calls, access token required by server.
Refresh Token:-why we need to use refresh token, how to use transparantly for the user so that he is unaware of access token expiry
and follow refreshing process.
------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------
app-routing.module.ts
------------------------------------------------------------------------------------------------------------------------
const routes: Routes = [
  {path:'',redirectTo:'login',pathMatch:'full'},
  {path:'login',component:LoginComponent,canActivate:[ActivateGuard]},
  {path:'dashboard',component:DashboardComponent,
  children: [
    { path: '', redirectTo: 'approved', pathMatch: 'full' },
    { path: 'pending', component: PendingissuesComponent,canDeactivate:[DeactivateGuard] },
    { path: 'approved', component: ApprovedComponent },
    {path: 'rewards', component:RewardsComponent,canDeactivate:[DeactivateGuard]},
    {path: 'violation', component:ViolationtypeComponent}
  ]
},
  {path:'register',component:RegisterComponent},
 
  {path:'**',component:PagenotfoundComponent}
];
------------------------------------------------------------------------------------------------------------------------
activate.guard.ts
--------------------------------------------------------------------------------------------------------------------------
import { Injectable } from '@angular/core';
import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';
import { Observable } from 'rxjs';

@Injectable({
  providedIn: 'root'
})
export class ActivateGuard implements CanActivate {
  canActivate(
    next: ActivatedRouteSnapshot,
    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {
      alert("want to login")
    return true;
  }
}
--------------------------------------------------------------------------------------------------------------------------
import { Injectable } from '@angular/core';
import { CanActivate, Router } from '@angular/router';
import {AuthService} from '../services/auth.service';

@Injectable({
  providedIn: 'root'
})
export class ActivateGuard implements CanActivate {
constructor(private authService: AuthService, private router: Router){}
canActivate(){
	if(this.authService.isLoggedIn()){
	this.router,navigate(['/]);
	}
	return !this.authService.isLoggedIn();
	}
}
--------------------------------------------------------------------------------------------------------------------------
